# ---------------------------------------------------------------------------
# RasterCollectionToPoints.py
# Created on: Fri Oct 03 2008 02:30:52 PM
#   (generated by ArcGIS/ModelBuilder)
# ---------------------------------------------------------------------------

#E:/GIS/us_water/precip_monthly.gdb/jan_daily_average;E:/GIS/us_water/precip_monthly.gdb/feb_daily_average E:/GIS/us_water/precip_monthly.gdb/test_1

# Import system modules
import sys, string, os, arcgisscripting

# Import system modules
import sys, string, os, arcgisscripting

# Create the Geoprocessor object
gp = arcgisscripting.create(9.3)
gp.overwriteoutput = 1

try:
    inputRasters = sys.argv[1]
    outputFC = sys.argv[2]
    
    gp.CheckOutExtension("spatial")
    gp.AddToolbox("C:/Program Files/ArcGIS/ArcToolbox/Toolboxes/Spatial Analyst Tools.tbx")
    gp.AddToolbox("C:/Program Files/ArcGIS/ArcToolbox/Toolboxes/Conversion Tools.tbx")
    gp.AddToolbox("C:/Program Files/ArcGIS/ArcToolbox/Toolboxes/Data Management Tools.tbx")
    tempDir = gp.scratchworkspace or gp.GetSystemEnvironment("TEMP")
    
    sampleTable = gp.createscratchname("samples", "", "Table", tempDir)
    tempFC = gp.createscratchname("points", "", "FeatureClass", "in_memory")
    inputRasterList = inputRasters.split(";")
    
    # Convert the first raster to points
    gp.addmessage("Converting to points...")
    gp.RasterToPoint_conversion(inputRasterList[0], tempFC, "")
    
    # Sample all the rasters at those points
    gp.addmessage("Sampling rasters...")
    gp.Sample_sa(inputRasters, tempFC, sampleTable, "NEAREST")
    
    # Join the sample table to the points
    gp.addmessage("Joining sample table to points...")
    fields = "; ".join(map(lambda field: field.Name, gp.ListFields(sampleTable, "g_*")))
    gp.JoinField_management(tempFC, "POINTID", sampleTable, "Rowid", fields)

    gp.addmessage("Exporting result...")
    fieldmappings = gp.createobject("FieldMappings");
    def addMapping (srcField, destFieldName):
        fieldmap = gp.createobject("FieldMap")
        fieldmap.addinputfield(tempFC, srcField.Name)
        outfield = fieldmap.OutputField
        outfield.Name = destFieldName
        outfield.AliasName = destFieldName
        fieldmap.OutputField = outfield
        fieldmappings.addfieldmap(fieldmap)
        return destFieldName
    srcFields = gp.ListFields(tempFC, "G_*")
    newNames = map(lambda p: os.path.split(p)[1], inputRasterList)
    map(addMapping, srcFields, newNames)
    gp.Merge_management(tempFC, outputFC, fieldmappings)
    
except Exception, err:
    gp.AddError(str(err))
    gp.AddError(gp.getmessages(2))

