# ---------------------------------------------------------------------------
# ReclassNLCDRasters.py
# Created on: Wed Aug 12 2009 01:13:00 PM
#   (generated by ArcGIS/ModelBuilder)
# ---------------------------------------------------------------------------

# Import system modules
import sys, string, os, arcgisscripting

# Create the Geoprocessor object
gp = arcgisscripting.create(10)
    
# Check out any necessary licenses
gp.CheckOutExtension("3D")
gp.CheckOutExtension("Spatial")

# Load required toolboxes...
gp.AddToolbox("C:/Program Files/ArcGIS/Desktop10.0/ArcToolbox/Toolboxes/3D Analyst Tools.tbx")


def doIt (index, year):
    indexStr = '%0*d' % (2, index);
    yearStr = str(year)
    input = "C:\Documents and Settings\erussell\My Documents\ArcGIS\GLOBE\Module_2\NLCD_HUC2.gdb\landcover_" + yearStr + "_" + indexStr
    reclass = "C:\Documents and Settings\erussell\My Documents\ArcGIS\GLOBE\Module_2\NLCD_HUC2_Level1.gdb\\landcover_" + yearStr + "_" + indexStr
    huc8 = "C:\Documents and Settings\erussell\My Documents\ArcGIS\GLOBE\Module_2\NLCD_HUC8_Level1.gdb\HUC2_" + indexStr
    gp.scratchworkspace = "C:\Documents and Settings\erussell\My Documents\ArcGIS\GLOBE\Module_2\Temp.gdb"
    huc8Fields = gp.ListFields(huc8)
    for lcType in [ 10, 20, 30, 40, 50, 60, 70, 80, 90 ]:
        fName = "LC_" + yearStr + "_" + str(lcType)
        if not any(field.Name == fName for field in huc8Fields):
            gp.AddField(huc8, fName, "DOUBLE")
    
    sys.stdout.write("in:  "  + input + "\n")
    sys.stdout.write("out: "  + reclass + "\n")
    if not gp.Exists(reclass):
        gp.Reclassify_3d(input, 
                         "VALUE", 
                         "0 9 NODATA;10 19 10;20 29 20;30 39 30;40 49 40;50 59 50;60 69 60;70 79 70;80 89 80;90 99 90;100 255 NODATA", 
                         reclass, 
                         "DATA")
    sys.stdout.write("finished reclass " + yearStr + "_" + indexStr + "\n")
    tab = "C:\Documents and Settings\erussell\My Documents\ArcGIS\GLOBE\Module_2\Temp.gdb\Tab" + yearStr + "_" + indexStr
    sys.stdout.write("in:  "  + reclass + "\n")
    sys.stdout.write("out: "  + tab + "\n")
    if not gp.Exists(tab):
        gp.TabulateArea_sa(huc8, "HUC8", reclass, "Value", tab)
    sys.stdout.write("finished tabulate " + yearStr + "_" + indexStr + "\n")
    tabFields = gp.ListFields(tab)
    tabRows = gp.SearchCursor(tab)
    tabRow = tabRows.Next()
    while tabRow:
        huc = tabRow.GetValue("HUC8")
        areas = map(lambda field: tabRow.GetValue(field.Name), tabFields[2:])
        areaSum = sum(areas)
        hucRows = gp.UpdateCursor(huc8)
        hucRow = hucRows.Next()
        while hucRow:
            if hucRow.GetValue("HUC8") == huc:
                for lcType in [ 10, 20, 30, 40, 50, 60, 70, 80, 90 ]:
                    fName = "VALUE_" + str(lcType)
                    if any(map(lambda field: field.Name == fName, tabFields)):
                        hucRow.SetValue("LC_" + yearStr + "_" + str(lcType), (tabRow.GetValue(fName) / areaSum) * 100.0)
                hucRows.UpdateRow(hucRow)
                del hucRow
                break
            hucRow = hucRows.Next()
        del hucRows
        tabRow = tabRows.Next()
    del tabRows
    sys.stdout.write("finished copy " + yearStr + "_" + indexStr + "\n")

for i in [18]: #range(1, 19):
    #doIt(i, 1992)
    #doIt(i, 2001)
    doIt(i, 2006)

gp.CheckInExtension("3D")
gp.CheckInExtension("Spatial")

    